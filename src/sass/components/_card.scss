.card {
  perspective: 150rem;
  position: relative;
  height: 52rem;
  h1 {
    text-align: center;
  }
  &-side {
    height: 52rem;
    transition: all .8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    border-radius: .3rem;
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba($black, .15);
  }
  &-side-front {
    background-color: $white;
  }
  &-side-back {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    width: 100%;
    height: 100%;
    transform: rotateY(180deg);
    @include respond(phone) {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr;
    }
    &-1 {
      background-image: linear-gradient(to right bottom, $monkGreen, $druidOrange);
    }
    &-2 {
      background-image: linear-gradient(to right bottom, $druidOrange, $monkGreen);
    }
  }
  &:hover &-side-front {
    transform: rotateY(-180deg);
  }  
  &:hover &-side-back {
    transform: rotateY(0);
  }
  &-picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: hue;
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    border-top-left-radius: .3rem;
    border-top-right-radius: .3rem;
    @include respond(phone) {
      height: 15rem;
    }
    &-1 {
      background-image: linear-gradient(to right bottom, $druidOrange, $darkWhite);
    }
    &-2 {
      background-image: linear-gradient(to right bottom, $monkGreen, $darkWhite);
    }
  }
  &-heading {
    font-size: 2.4rem;
    font-weight: normal;
    text-transform: uppercase;
    text-align: right;
    color: $white;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 70%;
    @include respond(phone) {
      font-size: 2rem;
      top: 10rem;
      right: 56%;
    }
  }
  &-heading-span {
    padding: 1rem 1.4rem;
    box-decoration-break: clone;
    &-1 {
      background-image: linear-gradient(to right bottom, rgba($lightOrange, .85), rgba($mediumOrange, .85));
    }
    &-2 {
      background-image: linear-gradient(to right bottom, rgba($darkGreen, .85), rgba($mediumGreen, .85));
    }
  }
  &-details {
    padding: 3rem;
    @include respond(phone) {
      padding: 1rem;
    }
    ul {
      list-style: none;
      width: 80%;
      margin: 0 auto;
      @include respond(phone) {
        width: 100%;
      }
      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;
        @include respond(phone) {
          padding: 5px;
        }
        &:not(:last-child) {
          border-bottom: .1rem solid $lighterGrey;
        }
      }
    }
  }
  &-cta {
    grid-column: 1 / -1;
    grid-row: 1 / -1;
    font-size: 2rem;
    color: $headerWhite;
    align-self: center;
    justify-self: center;
    padding: 0 0 10rem 2rem;
    width: 100%;
    @include respond(phone) {
      display: none;
    }
    span {
      font-size: 2.2rem;
      @include respond(phone) {
        font-size: 1.9rem;
      }
    }
  }
  &-read {
    grid-column: 2 / 5;
    grid-row: 5;
    align-self: end;
    justify-self: center;
    margin: 0 0 3rem 0;
    @include respond(phone) {
      grid-column: 1;
      grid-row: -1;
    }
  }
}


#bg__image-fifteen.lazy {
  background-color: linear-gradient(to right bottom, $druidOrange, $darkWhite);
  background-image: none;
}

#bg__image-fifteen {
  background-image: linear-gradient(to right bottom, $druidOrange, $darkWhite), url(../compressed/druid.webp);
}

#bg__image-sixteen.lazy {
 background-color: linear-gradient(to right bottom, $monkGreen, $darkWhite);
 background-image: none;
}

#bg__image-sixteen {
  background-image: linear-gradient(to right bottom, $monkGreen, $darkWhite), url(../compressed/monk.webp);
}